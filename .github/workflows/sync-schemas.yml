name: Sync schemas from Gutenberg

on:
  workflow_dispatch:
  schedule:
    - cron: '0 6 * * 1'   # Every Monday 06:00 UTC; change as you like

jobs:
  sync:
    runs-on: ubuntu-latest
    permissions:
      contents: write
      pull-requests: write
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Install git-filter-repo
        run: |
          python3 -m pip install --upgrade pip
          python3 -m pip install git-filter-repo

      - name: Fetch upstream trunk
        run: |
          git remote add upstream https://github.com/WordPress/gutenberg.git || true
          git fetch upstream trunk

      - name: Create filtered mirror (schemas/ -> repo root)
        run: |
          # Work on a temporary branch that tracks upstream tip
          git switch -C upstream-trunk FETCH_HEAD
          git filter-repo --path schemas/ --path-rename schemas/: --force

          # Publish to the mirror branch (force, but NOT to main)
          git switch -C upstream-mirror
          git push origin HEAD:upstream-mirror --force

      - name: Create or update PR into main
        uses: actions/github-script@v7
        with:
          script: |
            const owner = context.repo.owner;
            const repo = context.repo.repo;
            const head = "upstream-mirror";
            const base = "main";
            const title = "Sync: update schemas from Gutenberg";
            const body = "Automated sync of `schemas/` from WordPress/gutenberg (filtered to repo root).";

            // Try to find an open PR from upstream-mirror to main
            const { data: prs } = await github.rest.pulls.list({
              owner, repo, state: "open", base, head: `${owner}:${head}`
            });

            if (prs.length > 0) {
              // Update the existing PR title/body just in case
              await github.rest.pulls.update({
                owner, repo, pull_number: prs[0].number, title, body
              });
            } else {
              // Create a new PR
              await github.rest.pulls.create({ owner, repo, head, base, title, body });
            }
